buildscript {
    ext.kotlin_version = '1.2.21'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.16"
    }
}

plugins {
    id "org.jetbrains.kotlin.plugin.noarg" version "1.2.20"
    id "at.comm_unity.gradle.plugins.jpamodelgen" version "1.1.4"
}

group 'com.kameocode.anydao'
version '1.0-SNAPSHOT'


apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-jpa'
apply plugin: "kotlin-noarg"
apply plugin: "maven-publish"
apply plugin: 'org.jetbrains.dokka'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}
jpaModelgen{
    jpaModelgenSourcesDir = 'src/generated/java'
}

compileJpaModelgen {
    includes += ['**/test/helpers/*.java']
}

dependencies {

    compile "org.springframework.boot:spring-boot-starter-data-jpa:1.5.4.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-test:1.5.4.RELEASE"
    testCompile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.2.16.Final'

    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.2.Final'
    // kotlin libraries
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // tests
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "com.h2database:h2:1.4.196"

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}
task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
    inputs.dir 'src/main/kotlin'
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc, group: "documentation") {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}



artifacts {
    archives sourcesJar
    archives javadocJar
}
